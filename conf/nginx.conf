worker_processes  1;

# 后续需要调整级别
error_log  /dev/stdout warn;

# worker进程打开的最大文件数
worker_rlimit_nofile 65535;

events {
    use epoll;
    # 进程最大连接数
    worker_connections  45000;
}

http {
    default_type  application/octet-stream;

    client_max_body_size 10m;
    client_body_buffer_size 10m;
    # 用于设置读取客户端请求主体数据的超时时间，如果超时客户端还没有发送完整的主体数据，服务器将返回 "Request time out (408)" 错误。
    client_body_timeout 10;
    # 用于指定响应客户端的超时时间，如果超过这个时间，客户端没有任何活动，Nginx 将会关闭连接。
    send_timeout 10;

    # access_log /dev/stdout;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    # 开启高效文件传输模式
    sendfile        on;
    # 激活 TCP_CORK socket 选择,把 http response header 和文件的开始部分放在一个文件里发布，以减少网络报文段的数量
    tcp_nopush  on;
    # 数据在传输的过程中不进缓存
    tcp_nodelay on;

    # 用于设置客户端连接保持会话的超时时间，超过这个时间服务器会关闭该连接
    keepalive_timeout  120s 120s;
    keepalive_requests 100000;
    # 关闭不响应的客户端连接
    reset_timedout_connection on;

    #gzip  on;

    # 设置默认 lua 搜索路径，添加 lua 路径
    lua_package_path '$prefix/lua/?.lua;/blah/?.lua;;';

    # 在生产环境上务必确保 lua_code_cache 设置成 on。
    lua_code_cache on;

    lua_shared_dict my_cache 1m;


    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Cookie $http_cookie;


    server {
        listen 80;
        server_name _;

        proxy_ssl_verify on;
        proxy_ssl_trusted_certificate /etc/certs/cacert.pem;
        proxy_ssl_server_name on;
        proxy_ssl_name $host;

        location / {
            resolver 223.5.5.5 223.6.6.6;
            proxy_pass https://$host$request_uri;
            set $authorization "";
            if ($host = "www.baidu.com") {
                set $authorization "Basic base64-string";
            }
            if ($host = "jenkins.u.test.com") {
                access_by_lua_file lua/access.lua;
                header_filter_by_lua_file lua/header.lua;
            }
            proxy_set_header Authorization $authorization;
        }
    }
}
